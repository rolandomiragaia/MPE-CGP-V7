function mutate(this)
    % for each offspring mutate and generate new solutions
    for i = 1:this.configuration_.config.sizes.offspring

        if isfield(this.configuration_.callbacks, 'NEW_SOLUTION_IN_GENERATION')
            this.configuration_.callbacks.NEW_SOLUTION_IN_GENERATION(struct( ...
                'name', 'NEW_SOLUTION_IN_GENERATION', ...
                'offspringIndex', i, ...
                'generation', this.configuration_.config.generation, ...
                'genes', this.fittestSolution_.getGenes(), ...
                'fitness', this.fittestSolution_.getFitness(), ...
                'activeNodes', this.fittestSolution_.getActiveNodes() ...
            ));
        end

        solution = cgptoolbox.Mutation(this.configuration_).createMutation();

        % if the solution generated is better than the previous, update the fittest solution
        if (this.isThisSolutionFitterThanParent_(solution.getFitness(), this.configuration_.config.fitness_operator))
            if isfield(this.configuration_.callbacks, 'FITTEST_SOLUTION_OF_GENERATION')
                this.configuration_.callbacks.FITTEST_SOLUTION_OF_GENERATION(struct( ...
                    'name', 'FITTEST_SOLUTION_OF_GENERATION', ...
                    'offspringIndex', i, ...
                    'generation', this.configuration_.config.generation, ...
                    'genes', this.fittestSolution_.getGenes(), ...
                    'fitness', this.fittestSolution_.getFitness(), ...
                    'activeNodes', this.fittestSolution_.getActiveNodes() ...
                ));
            end

            this.fittestSolution_ = solution;
            this.configuration_.fittestSolution = solution;
        end

    end
end

